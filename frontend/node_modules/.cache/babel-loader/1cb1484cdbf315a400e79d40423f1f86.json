{"ast":null,"code":"import _slicedToArray from\"/home/thangnq/Code/netflix_mern/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useLayoutEffect,useState}from\"react\";import{useSelector}from\"react-redux\";import EpisodeItem from\"../episode-item/EpisodeItem\";import\"./episode.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Episode=function Episode(_ref){var movie=_ref.movie;var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),season=_useState2[0],setSeason=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),episodeOfSeason=_useState4[0],setEpisodeOfSeason=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showDropDown=_useState6[0],setShowDropDown=_useState6[1];useLayoutEffect(function(){if(season!==0){var epOfSeason=movie.seasons.filter(function(e){return e.seasonName===season;});setEpisodeOfSeason(epOfSeason[0].seasonContent);}else if(season===0){setEpisodeOfSeason(movie.seasons);}},[auth.token,season,movie]);var handleSelectSeason=function handleSelectSeason(e){setSeason(parseInt(e.target.value));setShowDropDown(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"episode\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"epsiode-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Episodes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-dropdown\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-toggle \".concat(showDropDown&&\"rotate\"),onClick:function onClick(){return setShowDropDown(!showDropDown);},children:season?\"Season \".concat(season):\"See All Episodes\"}),showDropDown&&/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu\",children:[movie.seasons.map(function(e,index){return/*#__PURE__*/_jsxs(\"li\",{className:\"dropdown-item\",onClick:handleSelectSeason,value:index+1,children:[\"Season \",index+1,\" \",/*#__PURE__*/_jsxs(\"span\",{className:\"dropdown-item-length\",children:[\" \",\"(\",e.seasonContent.length>1?e.seasonContent.length+\" Episodes\":e.seasonContent.length+\" Episode\",\")\"]})]},index);}),/*#__PURE__*/_jsx(\"div\",{className:\"breaker\"}),/*#__PURE__*/_jsx(\"li\",{className:\"dropdown-item\",value:0,onClick:handleSelectSeason,children:\"See All Episodes\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"episode-container\",children:season?episodeOfSeason.map(function(e,index){return/*#__PURE__*/_jsx(EpisodeItem,{episode:e,index:index,movie:movie},index);}):episodeOfSeason.map(function(e,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"epsiode-all-episodes\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Season \",e.seasonName]}),Array.isArray(e.seasonContent)&&e.seasonContent.map(function(eChild,index){return/*#__PURE__*/_jsx(EpisodeItem,{movie:movie,episode:eChild,index:index},eChild._id);})]},index);})})]});};export default Episode;","map":{"version":3,"sources":["/home/thangnq/Code/netflix_mern/frontend/src/components/episode/Episode.js"],"names":["React","useLayoutEffect","useState","useSelector","EpisodeItem","Episode","movie","state","auth","season","setSeason","episodeOfSeason","setEpisodeOfSeason","showDropDown","setShowDropDown","epOfSeason","seasons","filter","e","seasonName","seasonContent","token","handleSelectSeason","parseInt","target","value","map","index","length","Array","isArray","eChild","_id"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EpisodeItem from \"../episode-item/EpisodeItem\";\nimport \"./episode.scss\";\n\nconst Episode = ({ movie }) => {\n  const { auth } = useSelector((state) => state);\n  const [season, setSeason] = useState(1);\n  const [episodeOfSeason, setEpisodeOfSeason] = useState([]);\n  const [showDropDown, setShowDropDown] = useState(false);\n\n  useLayoutEffect(() => {\n    if (season !== 0) {\n      const epOfSeason = movie.seasons.filter((e) => e.seasonName === season);\n      setEpisodeOfSeason(epOfSeason[0].seasonContent);\n    } else if (season === 0) {\n      setEpisodeOfSeason(movie.seasons);\n    }\n  }, [auth.token, season, movie]);\n\n  const handleSelectSeason = (e) => {\n    setSeason(parseInt(e.target.value));\n    setShowDropDown(false);\n  };\n\n  return (\n    <div className=\"episode\">\n      <div className=\"epsiode-header\">\n        <h2>Episodes</h2>\n        <div className=\"button-dropdown\">\n          <button\n            className={`dropdown-toggle ${showDropDown && \"rotate\"}`}\n            onClick={() => setShowDropDown(!showDropDown)}\n          >\n            {season ? `Season ${season}` : \"See All Episodes\"}\n          </button>\n\n          {showDropDown && (\n            <ul className=\"dropdown-menu\">\n              {movie.seasons.map((e, index) => (\n                <li\n                  key={index}\n                  className=\"dropdown-item\"\n                  onClick={handleSelectSeason}\n                  value={index + 1}\n                >\n                  Season {index + 1}{\" \"}\n                  <span className=\"dropdown-item-length\">\n                    {\" \"}\n                    (\n                    {e.seasonContent.length > 1\n                      ? e.seasonContent.length + \" Episodes\"\n                      : e.seasonContent.length + \" Episode\"}\n                    )\n                  </span>\n                </li>\n              ))}\n              <div className=\"breaker\"></div>\n              <li\n                className=\"dropdown-item\"\n                value={0}\n                onClick={handleSelectSeason}\n              >\n                See All Episodes\n              </li>\n            </ul>\n          )}\n        </div>\n      </div>\n      <div className=\"episode-container\">\n        {season\n          ? episodeOfSeason.map((e, index) => (\n              <EpisodeItem\n                key={index}\n                episode={e}\n                index={index}\n                movie={movie}\n              />\n            ))\n          : episodeOfSeason.map((e, index) => (\n              <div key={index} className=\"epsiode-all-episodes\">\n                <h3>Season {e.seasonName}</h3>\n                {Array.isArray(e.seasonContent) &&\n                  e.seasonContent.map((eChild, index) => (\n                    <EpisodeItem\n                      movie={movie}\n                      key={eChild._id}\n                      episode={eChild}\n                      index={index}\n                    />\n                  ))}\n              </div>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Episode;\n"]},"metadata":{},"sourceType":"module"}