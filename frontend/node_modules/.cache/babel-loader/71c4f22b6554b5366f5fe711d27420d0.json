{"ast":null,"code":"import _objectSpread from\"/home/thangnq/Code/netflix_mern/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Link}from\"react-router-dom\";import React from\"react\";import\"./watch.scss\";import{useLocation}from\"react-router\";import ReactNetflixPlayer from\"react-netflix-player\";import{useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{createWatchAgain,deleteWatchAgain,updateWatchAgain}from\"../../redux/actions/userAction\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Watch=function Watch(){var location=useLocation();var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,user=_useSelector.user;var dispatch=useDispatch();useEffect(function(){var progressBar=document.querySelector(\".progress-bar\");return function(){if(progressBar.value>20){if(progressBar.value===progressBar.max){dispatch(deleteWatchAgain(auth,location.state.movie._id));}else{var foundMovie=user.watchAgain.filter(function(e){return e._id===location.state.movie._id;});if(foundMovie.length===0){var watchAgainMovie=_objectSpread(_objectSpread({},location.state.movie),{},{pausedAt:progressBar.value,movieLength:progressBar.max});dispatch(createWatchAgain(auth,watchAgainMovie));}else{var _watchAgainMovie=_objectSpread(_objectSpread({},location.state.movie),{},{pausedAt:progressBar.value,movieLength:progressBar.max});dispatch(updateWatchAgain(auth,_watchAgainMovie));}}}};},[dispatch,location.state.movie,user.watchAgain,auth]);return/*#__PURE__*/_jsxs(\"div\",{className:\"watch\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"back\",children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-arrow-left\"}),\"Home\"]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"video\",children:/*#__PURE__*/_jsx(ReactNetflixPlayer,{src:location.state.movie.video,primaryColor:\"#E50914\",autoPlay:true,playerLanguage:\"en\",title:location.state.movie.title,subTitle:location.state.movie.title,titleMedia:location.state.movie.title,startPosition:user.watchAgain.filter(function(e){return e._id===location.state.movie._id;}).length===1&&user.watchAgain.filter(function(e){return e._id===location.state.movie._id;})[0].pausedAt})})]});};export default Watch;","map":{"version":3,"sources":["/home/thangnq/Code/netflix_mern/frontend/src/pages/watch/Watch.js"],"names":["Link","React","useLocation","ReactNetflixPlayer","useEffect","useSelector","useDispatch","createWatchAgain","deleteWatchAgain","updateWatchAgain","Watch","location","state","auth","user","dispatch","progressBar","document","querySelector","value","max","movie","_id","foundMovie","watchAgain","filter","e","length","watchAgainMovie","pausedAt","movieLength","video","title"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./watch.scss\";\nimport { useLocation } from \"react-router\";\nimport ReactNetflixPlayer from \"react-netflix-player\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  createWatchAgain,\n  deleteWatchAgain,\n  updateWatchAgain,\n} from \"../../redux/actions/userAction\";\n\nconst Watch = () => {\n  const location = useLocation();\n  const { auth, user } = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const progressBar = document.querySelector(\".progress-bar\");\n    return () => {\n      if (progressBar.value > 20) {\n        if (progressBar.value === progressBar.max) {\n          dispatch(deleteWatchAgain(auth, location.state.movie._id));\n        } else {\n          const foundMovie = user.watchAgain.filter(\n            (e) => e._id === location.state.movie._id\n          );\n\n          if (foundMovie.length === 0) {\n            const watchAgainMovie = {\n              ...location.state.movie,\n              pausedAt: progressBar.value,\n              movieLength: progressBar.max,\n            };\n            dispatch(createWatchAgain(auth, watchAgainMovie));\n          } else {\n            const watchAgainMovie = {\n              ...location.state.movie,\n              pausedAt: progressBar.value,\n              movieLength: progressBar.max,\n            };\n            dispatch(updateWatchAgain(auth, watchAgainMovie));\n          }\n        }\n      }\n    };\n  }, [dispatch, location.state.movie, user.watchAgain, auth]);\n\n  return (\n    <div className=\"watch\">\n      <div className=\"back\">\n        <Link to=\"/\">\n          <div>\n            <i className=\"fas fa-arrow-left\"></i>\n            Home\n          </div>\n        </Link>\n      </div>\n      <div className=\"video\">\n        <ReactNetflixPlayer\n          src={location.state.movie.video}\n          primaryColor={\"#E50914\"}\n          autoPlay={true}\n          playerLanguage={\"en\"}\n          title={location.state.movie.title}\n          subTitle={location.state.movie.title}\n          titleMedia={location.state.movie.title}\n          startPosition={\n            user.watchAgain.filter((e) => e._id === location.state.movie._id)\n              .length === 1 &&\n            user.watchAgain.filter((e) => e._id === location.state.movie._id)[0]\n              .pausedAt\n          }\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Watch;\n"]},"metadata":{},"sourceType":"module"}