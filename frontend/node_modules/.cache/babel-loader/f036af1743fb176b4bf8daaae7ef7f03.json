{"ast":null,"code":"export var validRegister={validStep1:function validStep1(info){var username=info.username,email=info.email,password=info.password,_info$birthday=info.birthday,day=_info$birthday.day,month=_info$birthday.month,year=_info$birthday.year;var err={};//STEP 1\nif(!username){err.username=\"Please add your username.\";}else if(username.length>50){err.username=\"First name is up to 50 characters long.\";}else if(!validateUsername(username)){err.username=\"Username format is incorrect.\";}if(!email){err.email=\"Please add your email.\";}else if(!validateEmail(email)){err.email=\"Please enter a valid email address\";}if(!password){err.password=\"Please add your password.\";}else if(password.length<6){err.password=\"Password must be at least 6 characters.\";}if(!day||!month||!year){err.birthday=\"Please add your date of birth.\";}else if(validateBirthday(day,month,year)){err.birthday=validateBirthday(day,month,year);}return{errMsg:err,errLength:Object.keys(err).length};},validStep3:function validStep3(card){var firstName=card.firstName,lastName=card.lastName,cardNumber=card.cardNumber,expiredDate=card.expiredDate,securityCode=card.securityCode,agree=card.agree;var monthOfExprireDate=expiredDate.substring(0,2);var yearOfExprireDate=expiredDate.substring(3,5);var err={};if(!firstName){err.firstName=\"Please add your first name.\";}else if(firstName.length>50){err.firstName=\"First name is up to 50 characters long.\";}if(!lastName){err.lastName=\"Please add your first name.\";}else if(lastName.length>50){err.lastName=\"First name is up to 50 characters long.\";}if(!cardNumber){err.cardNumber=\"Please add your card number.\";}else if(!validateCardNumber(cardNumber)){err.cardNumber=\"Please enter your 16 digit credit card numbers\";}if(!expiredDate){err.expiredDate=\"Please add expried date of your card number.\";}else if(expiredDate.length!==5||!expiredDate.includes(\"/\")||isNaN(parseInt(monthOfExprireDate))||isNaN(parseInt(yearOfExprireDate))){err.expiredDate=\"Please enter card number format as MM/YY\";}if(!securityCode){err.securityCode=\"Please add security code of your card number.\";}else if(securityCode.length!==3||isNaN(parseInt(securityCode))){err.expiredDate=\"Your CVV code is not valid\";}if(!agree){err.agree=\"You must agree to the terms and conditions to continue.\";}return{errMsg:err,errLength:Object.keys(err).length};}};function validateEmail(email){var re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;return re.test(email);}function validateUsername(username){var re=/^[a-zA-Z0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Z0-9]){6,18}[a-zA-Z0-9]$/;return re.test(username);}function validateCardNumber(cardNumber){var re=/^\\d{16}$/;return re.test(cardNumber);}function validateBirthday(day,month,year){var dayCheck=/^(0?[1-9]|[12][0-9]|3[01])$/;var monthCheck=/^([1-9]|1[0-2])$/;var yearCheck=/^\\d{4}$/;var changeMonth=getMonth(month);if(monthCheck.test(changeMonth)&&dayCheck.test(day)&&yearCheck.test(year)){var ListofDays=[31,28,31,30,31,30,31,31,30,31,30,31];if(changeMonth===1||changeMonth>2){if(day>ListofDays[changeMonth-1]){return\"Day of this month is not valid.\";}}if(changeMonth===\"2\"){var leapYear=false;if(!(year%4)&&year%100||!(year%400)){leapYear=true;}if(leapYear===true&&day>29){return\"February of leap year has up to 29 days\";}if(leapYear===false&&day>28){return\"February of non-leap year has up to 28 days\";}}}}function getMonth(month){switch(month){case\"Jan\":return month=\"1\";case\"Feb\":return month=\"2\";case\"Mar\":return month=\"3\";case\"Apr\":return month=\"4\";case\"May\":return month=\"5\";case\"Jun\":return month=\"6\";case\"Jul\":return month=\"7\";case\"Aug\":return month=\"8\";case\"Sep\":return month=\"9\";case\"Oct\":return month=\"10\";case\"Nov\":return month=\"11\";case\"Dec\":return month=\"12\";default:break;}}","map":{"version":3,"sources":["/home/thangnq/Code/netflix_mern/frontend/src/utils/validRegister.js"],"names":["validRegister","validStep1","info","username","email","password","birthday","day","month","year","err","length","validateUsername","validateEmail","validateBirthday","errMsg","errLength","Object","keys","validStep3","card","firstName","lastName","cardNumber","expiredDate","securityCode","agree","monthOfExprireDate","substring","yearOfExprireDate","validateCardNumber","includes","isNaN","parseInt","re","test","dayCheck","monthCheck","yearCheck","changeMonth","getMonth","ListofDays","leapYear"],"mappings":"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","sourcesContent":["export const validRegister = {\n  validStep1: function (info) {\n    const {\n      username,\n      email,\n      password,\n      birthday: { day, month, year },\n    } = info;\n\n    const err = {};\n\n    //STEP 1\n    if (!username) {\n      err.username = \"Please add your username.\";\n    } else if (username.length > 50) {\n      err.username = \"First name is up to 50 characters long.\";\n    } else if (!validateUsername(username)) {\n      err.username = \"Username format is incorrect.\";\n    }\n\n    if (!email) {\n      err.email = \"Please add your email.\";\n    } else if (!validateEmail(email)) {\n      err.email = \"Please enter a valid email address\";\n    }\n\n    if (!password) {\n      err.password = \"Please add your password.\";\n    } else if (password.length < 6) {\n      err.password = \"Password must be at least 6 characters.\";\n    }\n\n    if (!day || !month || !year) {\n      err.birthday = \"Please add your date of birth.\";\n    } else if (validateBirthday(day, month, year)) {\n      err.birthday = validateBirthday(day, month, year);\n    }\n\n    return {\n      errMsg: err,\n      errLength: Object.keys(err).length,\n    };\n  },\n\n  validStep3: function (card) {\n    const {\n      firstName,\n      lastName,\n      cardNumber,\n      expiredDate,\n      securityCode,\n      agree,\n    } = card;\n\n    const monthOfExprireDate = expiredDate.substring(0, 2);\n    const yearOfExprireDate = expiredDate.substring(3, 5);\n\n    const err = {};\n\n    if (!firstName) {\n      err.firstName = \"Please add your first name.\";\n    } else if (firstName.length > 50) {\n      err.firstName = \"First name is up to 50 characters long.\";\n    }\n\n    if (!lastName) {\n      err.lastName = \"Please add your first name.\";\n    } else if (lastName.length > 50) {\n      err.lastName = \"First name is up to 50 characters long.\";\n    }\n\n    if (!cardNumber) {\n      err.cardNumber = \"Please add your card number.\";\n    } else if (!validateCardNumber(cardNumber)) {\n      err.cardNumber = \"Please enter your 16 digit credit card numbers\";\n    }\n\n    if (!expiredDate) {\n      err.expiredDate = \"Please add expried date of your card number.\";\n    } else if (\n      expiredDate.length !== 5 ||\n      !expiredDate.includes(\"/\") ||\n      isNaN(parseInt(monthOfExprireDate)) ||\n      isNaN(parseInt(yearOfExprireDate))\n    ) {\n      err.expiredDate = \"Please enter card number format as MM/YY\";\n    }\n\n    if (!securityCode) {\n      err.securityCode = \"Please add security code of your card number.\";\n    } else if (securityCode.length !== 3 || isNaN(parseInt(securityCode))) {\n      err.expiredDate = \"Your CVV code is not valid\";\n    }\n\n    if (!agree) {\n      err.agree = \"You must agree to the terms and conditions to continue.\";\n    }\n\n    return {\n      errMsg: err,\n      errLength: Object.keys(err).length,\n    };\n  },\n};\n\nfunction validateEmail(email) {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n\nfunction validateUsername(username) {\n  const re =\n    /^[a-zA-Z0-9](_(?!(\\.|_))|\\.(?!(_|\\.))|[a-zA-Z0-9]){6,18}[a-zA-Z0-9]$/;\n  return re.test(username);\n}\n\nfunction validateCardNumber(cardNumber) {\n  const re = /^\\d{16}$/;\n  return re.test(cardNumber);\n}\n\nfunction validateBirthday(day, month, year) {\n  const dayCheck = /^(0?[1-9]|[12][0-9]|3[01])$/;\n  const monthCheck = /^([1-9]|1[0-2])$/;\n  const yearCheck = /^\\d{4}$/;\n  const changeMonth = getMonth(month);\n\n  if (\n    monthCheck.test(changeMonth) &&\n    dayCheck.test(day) &&\n    yearCheck.test(year)\n  ) {\n    const ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n    if (changeMonth === 1 || changeMonth > 2) {\n      if (day > ListofDays[changeMonth - 1]) {\n        return \"Day of this month is not valid.\";\n      }\n    }\n\n    if (changeMonth === \"2\") {\n      let leapYear = false;\n      if ((!(year % 4) && year % 100) || !(year % 400)) {\n        leapYear = true;\n      }\n      if (leapYear === true && day > 29) {\n        return \"February of leap year has up to 29 days\";\n      }\n      if (leapYear === false && day > 28) {\n        return \"February of non-leap year has up to 28 days\";\n      }\n    }\n  }\n}\n\nfunction getMonth(month) {\n  switch (month) {\n    case \"Jan\":\n      return (month = \"1\");\n    case \"Feb\":\n      return (month = \"2\");\n    case \"Mar\":\n      return (month = \"3\");\n    case \"Apr\":\n      return (month = \"4\");\n    case \"May\":\n      return (month = \"5\");\n    case \"Jun\":\n      return (month = \"6\");\n    case \"Jul\":\n      return (month = \"7\");\n    case \"Aug\":\n      return (month = \"8\");\n    case \"Sep\":\n      return (month = \"9\");\n    case \"Oct\":\n      return (month = \"10\");\n    case \"Nov\":\n      return (month = \"11\");\n    case \"Dec\":\n      return (month = \"12\");\n    default:\n      break;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}