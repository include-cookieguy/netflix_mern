{"ast":null,"code":"import _slicedToArray from\"/home/thangnq/Code/netflix_mern/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef}from\"react\";import{Link}from\"react-router-dom\";import{Close}from\"@material-ui/icons\";import\"./infomodal.scss\";import useVideo from\"../../hooks/useVideo\";import Recommend from\"../recommend/Recommend\";import useMyList from\"../../hooks/useMyList\";import Episode from\"../episode/Episode\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InfoModal=function InfoModal(_ref){var infoModal=_ref.infoModal,setInfoModal=_ref.setInfoModal,bigMovie=_ref.bigMovie,recommend=_ref.recommend;var ref=useRef();var _useMyList=useMyList(bigMovie._id),_useMyList2=_slicedToArray(_useMyList,2),save=_useMyList2[0],addMovieToFav=_useMyList2[1];var typeMedia=useVideo(\"image\",infoModal);useEffect(function(){var escapeKey=function escapeKey(event){if(event.keyCode===27){setInfoModal(false);}};var clickOutSide=function clickOutSide(event){if(!ref.current||ref.current.contains(event.target)){return;}setInfoModal(false);};// Prevent scolling\ndocument.querySelector(\"html\").style.overflow=\"hidden\";document.addEventListener(\"keydown\",escapeKey);document.addEventListener(\"mousedown\",clickOutSide);return function(){document.querySelector(\"html\").style.overflowY=\"visible\";document.removeEventListener(\"keydown\",escapeKey);document.removeEventListener(\"mousedown\",clickOutSide);};},[setInfoModal]);return/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-container\",ref:ref,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-trailer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"close\",onClick:function onClick(){return setInfoModal(false);},children:/*#__PURE__*/_jsx(Close,{})}),typeMedia===\"image\"?/*#__PURE__*/_jsx(\"img\",{src:bigMovie.poster,className:\"poster-trailer\",alt:\"mov\"}):/*#__PURE__*/_jsx(\"video\",{className:\"poster-trailer\",autoPlay:true,src:bigMovie.trailer}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-trailer\",children:[/*#__PURE__*/_jsx(\"img\",{src:bigMovie.posterTitle,alt:\"Movie name\",className:\"poster-title-trailer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(Link,{to:{pathname:\"/watch\",state:{movie:bigMovie}},children:/*#__PURE__*/_jsxs(\"button\",{className:\"play\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-play\",style:{fontSize:\"14px\"}}),/*#__PURE__*/_jsx(\"span\",{children:\"Play\"})]})}),/*#__PURE__*/_jsxs(\"span\",{className:\"function-btn\",children:[/*#__PURE__*/_jsx(\"span\",{title:\"Add to your favourite list\",onClick:addMovieToFav,children:save?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-check\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"})}),/*#__PURE__*/_jsx(\"i\",{className:\"far fa-thumbs-up\"}),/*#__PURE__*/_jsx(\"i\",{className:\"far fa-thumbs-down\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-movie\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"modal-title\",children:[\"About \",/*#__PURE__*/_jsx(\"b\",{children:bigMovie.title})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-about\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"description\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"about-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[bigMovie.imdb,\" \",/*#__PURE__*/_jsx(\"b\",{className:\"imdb\",children:\"IMDb\"})]}),/*#__PURE__*/_jsx(\"span\",{children:bigMovie.year}),/*#__PURE__*/_jsxs(\"span\",{className:\"borderd\",children:[bigMovie.limitAge,\"+\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"borderd\",children:\"HD\"}),bigMovie.isSeries&&/*#__PURE__*/_jsx(\"span\",{children:bigMovie.seasons.length>1?bigMovie.seasons.length+\" Seasons\":bigMovie.seasons.length+\" Season\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"descr\",children:bigMovie.desc})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"cast-genre\",children:[/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#777777\"},children:[\"Casts: \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"#fff\"},children:bigMovie.actors})]}),/*#__PURE__*/_jsxs(\"p\",{style:{color:\"#777777\"},children:[\"Genres: \",/*#__PURE__*/_jsx(\"span\",{style:{color:\"#fff\"},children:bigMovie.genre})]})]})]}),bigMovie.isSeries&&/*#__PURE__*/_jsx(Episode,{movie:bigMovie}),/*#__PURE__*/_jsx(Recommend,{movieCurrent:bigMovie,recommend:recommend})]})]})});};export default InfoModal;","map":{"version":3,"sources":["/home/thangnq/Code/netflix_mern/frontend/src/components/infomodal/InfoModal.js"],"names":["React","useEffect","useRef","Link","Close","useVideo","Recommend","useMyList","Episode","InfoModal","infoModal","setInfoModal","bigMovie","recommend","ref","_id","save","addMovieToFav","typeMedia","escapeKey","event","keyCode","clickOutSide","current","contains","target","document","querySelector","style","overflow","addEventListener","overflowY","removeEventListener","poster","trailer","posterTitle","pathname","state","movie","fontSize","title","imdb","year","limitAge","isSeries","seasons","length","desc","color","actors","genre"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Close } from \"@material-ui/icons\";\nimport \"./infomodal.scss\";\nimport useVideo from \"../../hooks/useVideo\";\nimport Recommend from \"../recommend/Recommend\";\nimport useMyList from \"../../hooks/useMyList\";\nimport Episode from \"../episode/Episode\";\n\nconst InfoModal = ({ infoModal, setInfoModal, bigMovie, recommend }) => {\n  const ref = useRef();\n  const [save, addMovieToFav] = useMyList(bigMovie._id);\n\n  const typeMedia = useVideo(\"image\", infoModal);\n\n  useEffect(() => {\n    const escapeKey = (event) => {\n      if (event.keyCode === 27) {\n        setInfoModal(false);\n      }\n    };\n\n    const clickOutSide = (event) => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      setInfoModal(false);\n    };\n\n    // Prevent scolling\n    document.querySelector(\"html\").style.overflow = \"hidden\";\n    document.addEventListener(\"keydown\", escapeKey);\n    document.addEventListener(\"mousedown\", clickOutSide);\n\n    return () => {\n      document.querySelector(\"html\").style.overflowY = \"visible\";\n      document.removeEventListener(\"keydown\", escapeKey);\n      document.removeEventListener(\"mousedown\", clickOutSide);\n    };\n  }, [setInfoModal]);\n\n  return (\n    <div className=\"modal-backdrop\">\n      <div className=\"modal-container\" ref={ref}>\n        <div className=\"modal-trailer\">\n          <div className=\"close\" onClick={() => setInfoModal(false)}>\n            <Close />\n          </div>\n          {typeMedia === \"image\" ? (\n            <img src={bigMovie.poster} className=\"poster-trailer\" alt=\"mov\" />\n          ) : (\n            <video className=\"poster-trailer\" autoPlay src={bigMovie.trailer} />\n          )}\n          <div className=\"info-trailer\">\n            <img\n              src={bigMovie.posterTitle}\n              alt=\"Movie name\"\n              className=\"poster-title-trailer\"\n            />\n            <div className=\"buttons\">\n              <Link to={{ pathname: \"/watch\", state: { movie: bigMovie } }}>\n                <button className=\"play\">\n                  <i className=\"fas fa-play\" style={{ fontSize: \"14px\" }}></i>\n                  <span>Play</span>\n                </button>\n              </Link>\n              <span className=\"function-btn\">\n                <span\n                  title=\"Add to your favourite list\"\n                  onClick={addMovieToFav}\n                >\n                  {save ? (\n                    <i className=\"fas fa-check\"></i>\n                  ) : (\n                    <i className=\"fas fa-plus\"></i>\n                  )}\n                </span>\n\n                <i className=\"far fa-thumbs-up\"></i>\n                <i className=\"far fa-thumbs-down\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"modal-movie\">\n          <p className=\"modal-title\">\n            About <b>{bigMovie.title}</b>\n          </p>\n          <div className=\"modal-about\">\n            <div className=\"description\">\n              <div className=\"about-info\">\n                <span>\n                  {bigMovie.imdb} <b className=\"imdb\">IMDb</b>\n                </span>\n                <span>{bigMovie.year}</span>\n                <span className=\"borderd\">{bigMovie.limitAge}+</span>\n                <span className=\"borderd\">HD</span>\n                {bigMovie.isSeries && (\n                  <span>\n                    {bigMovie.seasons.length > 1\n                      ? bigMovie.seasons.length + \" Seasons\"\n                      : bigMovie.seasons.length + \" Season\"}\n                  </span>\n                )}\n              </div>\n              <p className=\"descr\">{bigMovie.desc}</p>\n            </div>\n\n            <div className=\"cast-genre\">\n              <p style={{ color: \"#777777\" }}>\n                Casts: <span style={{ color: \"#fff\" }}>{bigMovie.actors}</span>\n              </p>\n              <p style={{ color: \"#777777\" }}>\n                Genres: <span style={{ color: \"#fff\" }}>{bigMovie.genre}</span>\n              </p>\n            </div>\n          </div>\n          {bigMovie.isSeries && <Episode movie={bigMovie} />}\n          <Recommend movieCurrent={bigMovie} recommend={recommend} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InfoModal;\n"]},"metadata":{},"sourceType":"module"}