{"ast":null,"code":"import _slicedToArray from\"/home/thangnq/Code/netflix_mern/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch}from\"react-redux\";import{GLOBALTYPES}from\"../../redux/actions/globalTypes\";import\"./category.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Category=function Category(_ref){var type=_ref.type;var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDropDown=_useState2[0],setShowDropDown=_useState2[1];var genreList=[\"Action\",\"Adventure\",\"Animation\",\"Comedy\",\"Crime\",\"Drama\",\"Fantasy\",\"Historical\",\"Horror\",\"Romance\",\"Sci-fi\",\"Thriller\",\"Western\"];var _useState3=useState(\"Genres\"),_useState4=_slicedToArray(_useState3,2),genre=_useState4[0],setGenre=_useState4[1];var handleGenre=function handleGenre(e){dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});setGenre(e.target.textContent);setTimeout(function(){dispatch({type:GLOBALTYPES.ALERT,payload:{loading:false}});},1500);setShowDropDown(false);};useEffect(function(){setGenre(\"Genres\");},[type]);useEffect(function(){if(genre!==\"Genres\"){dispatch({type:GLOBALTYPES.GENRE,payload:genre});}else{dispatch({type:GLOBALTYPES.GENRE,payload:\"\"});}},[genre,dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:\"category\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"title-cate\",children:type===\"movie\"?\"Movies\":\"Series\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-dropdown\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-toggle \".concat(showDropDown&&\"rotate\"),onClick:function onClick(){return setShowDropDown(!showDropDown);},children:genre}),showDropDown&&/*#__PURE__*/_jsx(\"ul\",{className:\"dropdown-menu\",children:genreList.map(function(e,index){return/*#__PURE__*/_jsx(\"li\",{\"data-value\":e,className:\"dropdown-item\",onClick:handleGenre,children:e},index);})})]})]});};export default Category;","map":{"version":3,"sources":["/home/thangnq/Code/netflix_mern/frontend/src/components/category/Category.js"],"names":["React","useEffect","useState","useDispatch","GLOBALTYPES","Category","type","dispatch","showDropDown","setShowDropDown","genreList","genre","setGenre","handleGenre","e","ALERT","payload","loading","target","textContent","setTimeout","GENRE","map","index"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,iCAA5B,CACA,MAAO,iBAAP,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC7B,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,cAAwCD,QAAQ,CAAC,KAAD,CAAhD,wCAAOM,YAAP,eAAqBC,eAArB,eACA,GAAMC,CAAAA,SAAS,CAAG,CAChB,QADgB,CAEhB,WAFgB,CAGhB,WAHgB,CAIhB,QAJgB,CAKhB,OALgB,CAMhB,OANgB,CAOhB,SAPgB,CAQhB,YARgB,CAShB,QATgB,CAUhB,SAVgB,CAWhB,QAXgB,CAYhB,UAZgB,CAahB,SAbgB,CAAlB,CAeA,eAA0BR,QAAQ,CAAC,QAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CACzBP,QAAQ,CAAC,CAAED,IAAI,CAAEF,WAAW,CAACW,KAApB,CAA2BC,OAAO,CAAE,CAAEC,OAAO,CAAE,IAAX,CAApC,CAAD,CAAR,CACAL,QAAQ,CAACE,CAAC,CAACI,MAAF,CAASC,WAAV,CAAR,CACAC,UAAU,CAAC,UAAM,CACfb,QAAQ,CAAC,CACPD,IAAI,CAAEF,WAAW,CAACW,KADX,CAEPC,OAAO,CAAE,CACPC,OAAO,CAAE,KADF,CAFF,CAAD,CAAR,CAMD,CAPS,CAOP,IAPO,CAAV,CAQAR,eAAe,CAAC,KAAD,CAAf,CACD,CAZD,CAcAR,SAAS,CAAC,UAAM,CACdW,QAAQ,CAAC,QAAD,CAAR,CACD,CAFQ,CAEN,CAACN,IAAD,CAFM,CAAT,CAIAL,SAAS,CAAC,UAAM,CACd,GAAIU,KAAK,GAAK,QAAd,CAAwB,CACtBJ,QAAQ,CAAC,CAAED,IAAI,CAAEF,WAAW,CAACiB,KAApB,CAA2BL,OAAO,CAAEL,KAApC,CAAD,CAAR,CACD,CAFD,IAEO,CACLJ,QAAQ,CAAC,CAAED,IAAI,CAAEF,WAAW,CAACiB,KAApB,CAA2BL,OAAO,CAAE,EAApC,CAAD,CAAR,CACD,CACF,CANQ,CAMN,CAACL,KAAD,CAAQJ,QAAR,CANM,CAAT,CAQA,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,aAAM,SAAS,CAAC,YAAhB,UACGD,IAAI,GAAK,OAAT,CAAmB,QAAnB,CAA8B,QADjC,EADF,cAIE,aAAK,SAAS,CAAC,iBAAf,wBACE,eACE,SAAS,2BAAqBE,YAAY,EAAI,QAArC,CADX,CAEE,OAAO,CAAE,yBAAMC,CAAAA,eAAe,CAAC,CAACD,YAAF,CAArB,EAFX,UAIGG,KAJH,EADF,CAQGH,YAAY,eACX,WAAI,SAAS,CAAC,eAAd,UACGE,SAAS,CAACY,GAAV,CAAc,SAACR,CAAD,CAAIS,KAAJ,qBACb,WACE,aAAYT,CADd,CAEE,SAAS,CAAC,eAFZ,CAGE,OAAO,CAAED,WAHX,UAMGC,CANH,EAIOS,KAJP,CADa,EAAd,CADH,EATJ,GAJF,GADF,CA8BD,CA5ED,CA8EA,cAAelB,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { GLOBALTYPES } from \"../../redux/actions/globalTypes\";\nimport \"./category.scss\";\n\nconst Category = ({ type }) => {\n  const dispatch = useDispatch();\n  const [showDropDown, setShowDropDown] = useState(false);\n  const genreList = [\n    \"Action\",\n    \"Adventure\",\n    \"Animation\",\n    \"Comedy\",\n    \"Crime\",\n    \"Drama\",\n    \"Fantasy\",\n    \"Historical\",\n    \"Horror\",\n    \"Romance\",\n    \"Sci-fi\",\n    \"Thriller\",\n    \"Western\",\n  ];\n  const [genre, setGenre] = useState(\"Genres\");\n\n  const handleGenre = (e) => {\n    dispatch({ type: GLOBALTYPES.ALERT, payload: { loading: true } });\n    setGenre(e.target.textContent);\n    setTimeout(() => {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          loading: false,\n        },\n      });\n    }, 1500);\n    setShowDropDown(false);\n  };\n\n  useEffect(() => {\n    setGenre(\"Genres\");\n  }, [type]);\n\n  useEffect(() => {\n    if (genre !== \"Genres\") {\n      dispatch({ type: GLOBALTYPES.GENRE, payload: genre });\n    } else {\n      dispatch({ type: GLOBALTYPES.GENRE, payload: \"\" });\n    }\n  }, [genre, dispatch]);\n\n  return (\n    <div className=\"category\">\n      <span className=\"title-cate\">\n        {type === \"movie\" ? \"Movies\" : \"Series\"}\n      </span>\n      <div className=\"button-dropdown\">\n        <button\n          className={`dropdown-toggle ${showDropDown && \"rotate\"}`}\n          onClick={() => setShowDropDown(!showDropDown)}\n        >\n          {genre}\n        </button>\n\n        {showDropDown && (\n          <ul className=\"dropdown-menu\">\n            {genreList.map((e, index) => (\n              <li\n                data-value={e}\n                className=\"dropdown-item\"\n                onClick={handleGenre}\n                key={index}\n              >\n                {e}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}